"use client"
import React, { useState } from 'react'
import TextInput from "@/components/FormInputs/TextInput";
import TextareaInput from "@/components/FormInputs/TextareaInput";
import ImageInput from "@/components/FormInputs/ImageInput"
import SelectInput from '@/components/FormInputs/SelectInput'
import SubmitButton from '@/components/FormInputs/SubmitButton'
import { makePostRequest, makePutRequest } from "@/lib/apiRequest";
import generateSlug from '@/lib/generateSlug'
import FormHeader from '@/components/backoffice/FoarmHeader'
import {useForm} from 'react-hook-form'
import { title } from 'process';
import ToggleInput from "@/components/FormInputs/ToggleInput"
import { useRouter } from 'next/navigation';

export default function NewCategory() {


  // const markets= [
  //   {
  //     id:1,
  //     title:"Sproutes farmer Market"
  //   },
  //   {
  //     id:2,
  //     title:"Cabbage farmer Market"
  //   },
  //   {
  //     id:3,
  //     title:"Carrot farmer Market"
  //   },
  // ]

  const [imageUrl, setImageUrl] = useState("");
  const [loading, setLoading] = useState(false);

  const {register,reset,watch,handleSubmit,formState:{errors}}= useForm({
    defaultValues:{
        isActive:true
    }
  });
  const router = useRouter();
  function redirect(){
    router.push('/dashboard/categories');
  }

  const isActive = watch("isActive");


  async function onSubmit(data) {
  {/* 
      id = autogenerated
      title
      slug= autogenerated
      description
      image
      */}
    console.log(data);
    const slug = generateSlug(data.title)
    data.slug = slug
    data.isActive = isActive;
    console.log(data.buttonTitle)
    makePostRequest(
      setLoading,
      "api/categories",
      data,
      "Category",
      reset,
      redirect
    )
 
  }
  return (
    <div>
     
    
      <FormHeader title="New Category"/>
       {/* Form */}
       <form
        onSubmit={handleSubmit(onSubmit)}
        className="w-full max-w-4xl p-4 bg-white border border-gray-200 rounded-lg shadow sm:p-6 md:p-8 dark:bg-gray-700 dark:border-gray-700 mx-auto my-3"
      >
        <div className="grid gap-4 sm:grid-cols-2 sm:gap-6">
          <TextInput
            label="Category Title"
            name="title"
            register={register}
            errors={errors}
            // className="w-full"
          />
          {/* <SelectInput
            label="Select Market"
            name="marketIds"
            register={register}
            errors={errors}
            options={markets}
            className="w-full"
            multiple={false}
          /> */}
          <TextareaInput
            label="Category Description"
            name="description"
            register={register}
            errors={errors}
           
          />
          <ToggleInput
            label="Publish your Category"
            name="isActive"
            trueTitle="Active"
            falseTitle="Draft"
            register={register}
            errors={errors}
            />
          {/* <ImageInput
          imageUrl={imageUrl}
          setImageUrl={setImageUrl}
          endpoint="imageUploader"
          label="Category Image"

           /> */}
        </div>
        <SubmitButton
          isLoading={loading}
          buttonTitle="Create Category"
          loadingButtonTitle="Creating Category please wait..."
        />
      </form>

    </div>
  )
}
