
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  // url      = env("DATABASE_URL")
  url = "mongodb+srv://bilalhussain199682:3Q25SGrjY6RZcgXH@mongocrm.yxcn1rw.mongodb.net/myDB?retryWrites=true&w=majority"
}

// title, couponCode, expireDate
model Coupon{
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title String
  couponCode String
  expiryDate DateTime 
  isActive Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Banner{
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title String
  link String
  imageUrl String 
  isActive Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String 
  slug       String @unique
  imageUrl  String?
  description String?
  isActive Boolean   
  
 
  marketIds String[] @db.ObjectId
  markets   Market[]   @relation(fields: [marketIds], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Market {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String     @unique
  domainName  String?
  imageUrl     String?
  description String?
  isActive Boolean
  
  categoryId String[]   @db.ObjectId
  categories  Category[] @relation(fields: [categoryId], references: [id])

  createdAt   DateTime   @default(now())
  updatedAt   DateTime?  @updatedAt
}
model Product {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String    
  slug       String @unique
  imageUrl  String?
  description String?   
  isActive  Boolean
  isWholesale  Boolean
  sku       String?
  barcode   String?
  productCode String?
  unit        String?
  productPrice Float
  productSalePrice   Float
  wholesalePrice   Float?
  wholesaleQty   Int?
  productStock   Int?
  quantity   Int?
  tags        String[]
  categoryId String @db.ObjectId 

  farmerId String  @db.ObjectId

  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
}

enum UserRole{
  ADMIN
  USER
  FARMER
  MODERATOR
}

model User {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  
  name    String?
  email   String?   @unique
  password String
  emailVerified DateTime?
  role  UserRole @default(USER)
  
  farmerProfile FarmerProfile?

	createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model FarmerProfile {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId @unique
  code String
  contactPerson String?
  contactPersonPhone String?
  email String
  name String
  notes String?
  phone String
  physicalAddress String?
  terms String?
  profileImageUrl String?
  isActive Boolean

  

  user   User @relation(fields: [userId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
}
