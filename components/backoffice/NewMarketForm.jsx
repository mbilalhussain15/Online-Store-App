"use client"
import React, { useState } from 'react'
import TextInput from "@/components/FormInputs/TextInput";
import TextareaInput from "@/components/FormInputs/TextareaInput";
import ImageInput from "@/components/FormInputs/ImageInput"
import SubmitButton from '@/components/FormInputs/SubmitButton'
import { makePostRequest, makePutRequest } from "@/lib/apiRequest";
import generateSlug from '@/lib/generateSlug'
import generateCouponCode from '@/lib/generateCouponCode'
import generateIsoFormattedDate from '@/lib/generateIsoFormattedDate'
import FormHeader from '@/components/backoffice/FoarmHeader'
import {useForm} from 'react-hook-form'
import { useRouter } from 'next/navigation';
import ToggleInput from "@/components/FormInputs/ToggleInput"
import ImageUpload from "@/components/FormInputs/ImageUpload"
import SelectInput from '@/components/FormInputs/SelectInput'

export default function NewMarketForm({categories}) {


  const [imageUrl, setImageUrl] = useState("");
  const [loading, setLoading] = useState(false);
  
  const {register,reset,watch,handleSubmit,formState:{errors}}= useForm({
    defaultValues:{
        isActive:true
    }
  });
  const router = useRouter();
  function redirect(){
    router.push('/dashboard/markets');
  }

  const isActive = watch("isActive");



  async function onSubmit(data) {
  {/* 
      id = autogenerated
      title
      code= autogenerated
      description
      validity date
      */}

  

    const slug = generateSlug(data.title);
    data.slug = slug;
    data.imageUrl= imageUrl;
    data.isActive = isActive;
   
   makePostRequest(
    setLoading,
    "api/markets",
    data,
    "Market",
    reset,
    redirect
  )
  setImageUrl("");

  }
  return (
    <div>
     
    
      <FormHeader title="New Market"/>
       {/* Form */}
       <form
        onSubmit={handleSubmit(onSubmit)}
        className="w-full max-w-4xl p-4 bg-white border border-gray-200 rounded-lg shadow sm:p-6 md:p-8 dark:bg-gray-700 dark:border-gray-700 mx-auto my-3"
      >
        <div className="grid gap-4 sm:grid-cols-2 sm:gap-6">
          <TextInput
            label="Company Name"
            name="title"
            register={register}
            errors={errors}
          />
        
           <TextInput
            label="Domain Name"
            name="domainName"
            register={register}
            errors={errors}
            className="w-full"
          />
          <SelectInput
            label="Select Company Type"
            name="categoryIds"
            register={register}
            errors={errors}
            options={categories}
            className="w-full"
            multiple={false}
          />
          <TextareaInput
            label="Description"
            name="description"
            register={register}
            errors={errors}
          />
          <ImageUpload
            imageUrl={imageUrl}
            setImageUrl={setImageUrl}
            label="Company Logo"
           />
          <ToggleInput
            label="Publish your Company"
            name="isActive"
            trueTitle="Active"
            falseTitle="Draft"
            register={register}
            errors={errors}
            />
        </div>
        <SubmitButton
          isLoading={loading}
          buttonTitle="Create Company"
          loadingButtonTitle="Creating Company please wait..."
        />
      </form>

    </div>
  )
}
